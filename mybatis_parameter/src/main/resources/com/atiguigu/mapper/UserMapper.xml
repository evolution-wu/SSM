<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper namespace="org.mybatis.example.BlogMapper"-->
<mapper namespace="com.atiguigu.mapper.UserMapper">

    <!--
        mybatis获取参数的两种方式
        ${}的本质就是字符串拼接，#{}的本质就是占位符赋值
        ${}使用字符串拼接的方式拼接sql，若为字符串类型或日期类型的字段进行赋值时，需要手动加单引号；
        但是#{}使用占位符赋值的方式拼接sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号

        select * from t_user where username = #{username}-->

   <!-- User getUserByName(String username);-->
    <select id="getUserByName" resultType="User">
        select * from t_user where username = '${username}'
    </select>


<!--
    若mapper接口中的方法参数为多个时
    此时MyBatis会自动将这些参数放在一个map集合中，以arg0,arg1...为键，以参数为值；以
    param1,param2...为键，以参数为值；因此只需要通过${}和#{}访问map集合的键就可以获取相
    对应的值，注意${}需要手动加单引号
    -->
    <!-- User checkLogin(String username, String password);-->
    <select id="checkLogin" resultType="User">
        select * from t_user where username = #{param1} and password = #{param2}
    </select>

    <!--若mapper接口中的方法需要的参数为多个时，此时可以手动创建map集合，将这些数据放在
    map中只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号-->
    <!--User checkLoginByMap(Map<String, Object> map);-->
    <select id="checkLoginByMap" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>


    <!--若mapper接口中的方法参数为实体类对象时此时可以使用${}和#{}，通过访问实体类对象中的属性名获取属性值，注意${}需要手动加单引号-->
    <!--void insertUser(User user);-->
    <select id="insertUser" resultType="User">
        insert into t_user values (null,#{username},#{password},#{age},#{gender},#{email})
    </select>

    <!--可以通过@Param注解标识mapper接口中的方法参数此时，会将这些参数放在map集合中，以@Param注解的value属性值为键，以参数为值；
    以param1,param2...为键，以参数为值；只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号-->
    <!--User checkLoginByParam(@Param("username") String username, @Param("password") String password);-->
    <select id="checkLoginByParam" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>
</mapper>